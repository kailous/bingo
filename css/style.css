@font-face {
    font-family: 'Urbanist';
    src: url('../fonts/PermanentMarker-Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

/* 界面 */
html,
body {
    height: calc(100% - 3em);
    margin: 0;
}

body {
    display: flex;
    font-family: Arial, sans-serif;
    text-align: center;
    background-color: var(--bg-color);
    flex-direction: column;
    align-items: center;
    gap: 20px;
    padding: 3em 0px;
    justify-content: space-between;
}

#title {
    display: flex;
    gap: 10px;
    align-items: center;
    flex-direction: column;
    padding: 0;
}

h1 {
    font-size: 6em;
    margin: 0;
    line-height: 100%;
    color: var(--text-color);
    font-family: 'Urbanist', sans-serif;
}

p {
    font-size: 1em;
    margin: 0;
    line-height: 100%;
    color: var(--text-color);
    opacity: 0.25;
}

button {
    /* margin: 20px auto; */
    padding: 10px 20px;
    border: 0;
    border-radius: 35px;
    background-color: var(--button-bg-color);
    color: var(--button-text-color);
    font-size: 14px;
    cursor: pointer;
}

/* 棋盘 */
#gameBoard {
    display: inline-grid;
    grid-template-columns: repeat(7, 1fr);
    grid-gap: var(--board-gap);
    align-content: center;
    justify-content: center;
    align-items: center;
    justify-items: center;
}

.card-piece {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    position: absolute;
    top: calc(-1 * var(--piece-size) / 2);
}

.cell {
    width: var(--piece-size);
    height: var(--piece-size);
    background-color: var(--board-bg-color);
    box-shadow: 0px 4px 10px 5px var(--board-Ishadow-color) inset, 0px 0px 20px 0px var(--board-shadow-color);
    border: var(--cell-border) solid var(--board-border-color);
    border-radius: 50%;
    cursor: pointer;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: auto;
}

/* 棋子 */
.piece {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    position: relative;
    top: calc(6vw * -6);
    /* Start above the board */
}

.userA,
.userB {
    display: inline-flex;
    justify-content: center;
    font-size: var(--star-size);
    line-height: var(--star-size);
    border: var(--piece-border) solid;
    width: calc(var(--piece-size) - var(--piece-border) * 2);
    height: calc(var(--piece-size) - var(--piece-border) * 2);
    align-items: center;
}

.userA {
    background-color: var(--userA-bg-color);
    border-color: var(--userA-border-color);
    box-shadow: 0px 5px 30px 0px rgba(255, 0, 0, 0.50), 0px 4px 7px 9px #CC0100 inset;
}

.userB {
    background-color: var(--userB-bg-color);
    border-color: var(--userB-border-color);
    box-shadow: 0px 5px 30px 0px rgba(1, 107, 255, 0.50), 0px 4px 7px 9px #05C inset;
}

.card-piece.userA {
    box-shadow: 0px 5px 30px 0px rgba(255, 0, 0, 0.50), 0px 4px 7px 9px #CC0100 inset;
}

.card-piece.userB {
    box-shadow: 0px 5px 30px 0px rgba(1, 107, 255, 0.50), 0px 4px 7px 9px #05C inset;
}

iconpark-icon {
    width: var(--star-size);
    height: var(--star-size);
}

.userA iconpark-icon {
    color: var(--userA-border-color);
    stroke: hsl(0deg 0% 100% / 0.2);
    stroke-width: 1;
}

.userB iconpark-icon {
    color: var(--userB-border-color);
    stroke: hsl(0deg 0% 100% / 0.2);
    stroke-width: 1;
}

/* 胜利弹窗 */
#victoryPopup {
    color: var(--card-text-color) !important;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100%;
    background-color: var(--victoryPopup-bg-color);
    align-items: center;
    justify-content: center;
    z-index: 100;
    backdrop-filter: blur(10px);
}

#victoryPopup h1 {
    color: var(--card-text-color) !important;
}

#card {
    position: fixed;
    top: calc(50% - 120px / 2);
    left: calc(50% - (300px + 20px * 2) / 2);
    display: flex;
    flex-direction: column;
    gap: 10px;
    align-items: center;
    justify-content: center;
    background-color: var(--card-color);
    border: var(--cell-border) solid var(--board-border-color);
    border-radius: 10px;
    padding: calc(var(--piece-size) / 2) 20px 20px;
    margin: auto;
    width: 300px;
}

#card h1 {
    font-size: 2.5em;
    margin: 0;
    line-height: 100%;
    color: var(--card-text-color);
}

.l,
.r {
    transform: scale(0.8);
}

.l {
    left: calc(300px / 2 - 0.8 * var(--piece-size) / 4 - var(--piece-size) / 2);
}

.r {
    right: calc(300px / 2 - 0.8 * var(--piece-size) / 4 - var(--piece-size) / 2);
}

/* 棋子下落动画 */
@keyframes drop {
    to {
        top: 0;
    }
}

.animate-drop {
    animation: drop 0.3s cubic-bezier(0.4, 0.0, 0.2, 1) forwards;
}

/* 设置 */
#gamesSetup {
    display: flex;
    width: calc(var(--piece-size) * 7 + var(--board-gap) * 6 + 7 * 2px - 20px *2);
    padding: 20px;
    background: var(--board-bg-color);
    border-radius: 20px;
    flex-wrap: nowrap;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    align-content: center;
}

#gamesSetup .ai {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    align-content: center;
    gap: 10px;
    color: var(--button-text-color) !important;
}

#gamesSetup .ai p {
    color: var(--button-text-color) !important;
    opacity: 1 !important;
}

/* 滑动开关 */
.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--bg-color);
    -webkit-transition: .4s;
    transition: .4s;
}

.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: var(--button-text-color);
    -webkit-transition: .4s;
    transition: .4s;
}

input:checked+.slider {
    background-color: var(--button-bg-color);
}

input:focus+.slider {
    box-shadow: 0 0 1px var(--button-bg-color);
}

input:checked+.slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
    border-radius: 34px;
}

.slider.round:before {
    border-radius: 50%;
}